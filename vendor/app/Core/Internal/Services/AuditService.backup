<?php

namespace App\Core\Internal\Services;

// use App\Core\Internal\Entities\AuditDataItemPersistent;
use App\Core\POS\Entities\PointOfSaleLog;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Auth;


class AuditService 
{

    // private $auditReferenceService;

    // public function __construct(AuditReferenceService $auditReferenceService)
    // {
    //     $this->auditReferenceService = $auditReferenceService;
    // }

    public function create($object, $param)
    {
        $now = now();
        $param['User'] = $param['User']->Oid;
        if (isset($param['Type'])) $param['Module'] = $param['Type'];
        unset($param['Type']);
        unset($param['Property']);
        unset($param['NewValue']);
        $data = PointOfSaleLog::create(array_merge([
            'Company' => Auth::check() ? Auth::user()->Company : config('app.company_id'),
            'PointOfSale' => $object->Oid,
            'Name' => Auth::check() ? Auth::user()->UserName : 'Guest',
            'Date' => (clone $now)->addHours(company_timezone())->toDateTimeString(),
        ], $param));
    }

    // public function create($object, $param)
    // {
    //     $auditReference = $this->auditReferenceService->find($object);
    //     if (is_null($auditReference)) $auditReference = $this->auditReferenceService->create($object);
    //     $now = now();

    //     if (isset($param['Type'])) {
    //         $param['OperationType'] = $param['Type'];
    //     }
    //     unset($param['Type']);
        
    //     if (isset($param['User'])) {
    //         $param['UserName'] = $param['User']->UserName;
    //     }
    //     unset($param['User']);

    //     if (isset($param['Property'])) {
    //         $param['PropertyName'] = $param['Property'];
    //     }
    //     unset($param['Property']);
        
    //     $auditData = AuditDataItemPersistent::create(array_merge([
    //         'UserName' => Auth::check() ? Auth::user()->UserName : 'Guest',
    //         'ModifiedOn' => (clone $now)->addHours(company_timezone())->toDateTimeString(),
    //         'AuditedObject' => $auditReference->Oid,
    //     ], $param));
    //     DB::table('myauditdataitempersistent')
    //     ->insert([ 'Oid' => $auditData->Oid, 'ModifiedOnUTC' => $now->toDateTimeString(), 'Company' => config('app.company_id') ]);
    // }
}