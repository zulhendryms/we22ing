<?php

namespace App\Core\Base\Scopes;

use Illuminate\Database\Eloquent\Scope;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Support\Facades\Schema;
use Illuminate\Support\Facades\Auth;
use App\Core\Master\Entities\Company;

class CompanyScope implements Scope
{
    public function apply(Builder $builder, Model $model)
    {
        $logger = true;
        $user = Auth::user();
        if ($user) $company = $user->Company; else $company = config('app.company_id');
        $company = Company::where('Oid',$company)->first();
        $found = '';

        $tmp = json_decode($company->ModuleGlobal);        
        if ($found == '' && $tmp) $found = $this->findObject($tmp, $model, 'GlobalAll');

        $tmp = json_decode($company->ModuleGlobalCombo);        
        if ($found == '' && $tmp) $found = $this->findObject($tmp, $model, 'GlobalCombo');
        
        $tmp = json_decode($company->ModuleGroup);
        if ($found == '' && $tmp) $found = $this->findObject($tmp, $model, 'GroupAll');

        $tmp = json_decode($company->ModuleGroupCombo);
        if ($found == '' && $tmp) $found = $this->findObject($tmp, $model, 'GroupCombo');

        // if ($model->getTable()=='accaccount') $found = 'Global';        
        if ($found == 'GroupAll') {
            
            if ($logger) logger("SCOPE GROUP ALL ".$model->getTable().".CompanySource = '".$company->CompanySource."'");
            $companies = Company::whereRaw("(CompanySource='".$company->CompanySource."' OR CompanySource='".$company->Oid."')")->pluck('Oid');
            $builder->whereIn($model->getTable().'.Company', $companies);
        } elseif ($found == 'GroupCombo') {
            $companies = Company::where('CompanySource', $company->Oid)->pluck('Oid');
            if ($companies) { // parent
                if ($logger) logger("SCOPE GroupCombo 1 ".$model->getTable().".CompanySource = ".$company->Code." OR Company Oid =".$company->Code);
                $companies[] = $company->Oid;
                $builder->whereIn($model->getTable().'.Company', $companies);
            } else {// detail
                if ($logger) logger("SCOPE GroupCombo 2 ".$model->getTable().".Company IN ".$company->Code." ".$company->CompanySourceObj->Code);
                $builder->whereRaw("(".$model->getTable().".Company='".$company->Oid."' 
                    OR ".$model->getTable().".Company='".$company->CompanySource."')");
            }
            
            // $builder->whereRaw("(".$model->getTable().".Company='".$company->Oid."' OR ".$model->getTable().".Company='".$company->CompanySource."')");
        } elseif ($found == 'GlobalCombo') {
            $companies = Company::where('CompanySource', $company->Oid)->pluck('Oid');            
            if ($companies) { // parent
                if ($logger) logger("SCOPE GlobalCombo 3 ".$model->getTable().".CompanySource = ".$company->Code." OR Company Oid =".$company->Code." OR Company Oid =".$company->CompanySourceObj->Code);
                $companies[] = $company->Oid;
                $companies[] = $company->CompanySource;
                $companies[] = '66d2f35b-5463-11ea-9abd-1a582ceaab05';
                $builder->whereIn($model->getTable().'.Company', $companies);
            } else {// detail
                if ($logger) logger("SCOPE GlobalCombo 4 ".$model->getTable().".Company IN ".$company->Code." ".$company->CompanySourceObj->Code." ".$company->CompanySourceObj->CompanySource);
                $builder->whereRaw("(".$model->getTable().".Company='".$company->Oid."' 
                    OR ".$model->getTable().".Company='".$company->CompanySource."' 
                    OR ".$model->getTable().".Company='".$company->CompanySourceObj->Oid."')");
            }

        } elseif ($found == '') {
            // $builder->leftJoin("company AS CompanyObj", "CompanyObj.Oid", "=", $model->getTable().".Company");
            // $builder->where("CompanyObj.CompanySource",$company->CompanySource);
            if ($logger) logger("SCOPE FILTER ".$model->getTable().".Company = '".$company->Oid."'");
            $builder->where($model->getTable().'.Company', $company->Oid);
            // dd($builder);
        } else {
            if ($logger) logger("SCOPE NOFILTER ".$model->getTable()." ".$company->Oid);
        }
    }
    private function findObject($tmp, $model, $found) {        
        foreach($tmp as $row) {            
            if ($row == 'all') return $found;
            if ($row == $model->getTable()) return $found;
        }
    }
}