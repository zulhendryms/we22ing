<?php

namespace App\Core\Security\Services;

use Illuminate\Support\Facades\DB;
use App\Core\Internal\Entities\RoleModuleCustom;
use App\Core\Master\Entities\Company;
use Illuminate\Support\Facades\Auth;
use stdClass;

class RoleModuleService
{
    public function __construct()
    {
        
    }

    public function list($module)
    {
        $company = Auth::user()->CompanyObj;
        $user = Auth::user();
        logger($user);
        $modules = "";
        if ($company->ModulePOS) $modules = $modules.($modules ? "," : "")."'pos'";
        if ($company->ModuleTravel) $modules = $modules.($modules ? "," : "")."'travel'";
        if ($company->ModuleAccounting) $modules = $modules.($modules ? "," : "")."'accounting'";
        if ($company->ModuleProduction) $modules = $modules.($modules ? "," : "")."'production'";
        $query = "SELECT rm.Oid, rm.Role, m.Code AS Modules, CONCAT(IFNULL(mp.Name,m.ModulesParent), ' - ', IFNULL(m.Name, rm.Modules)) AS Name, rm.IsRead, rm.IsAdd, rm.IsEdit, rm.IsDelete,
                CASE WHEN rm.IsRead = 1 AND rm.IsAdd = 1 AND rm.IsEdit = 1 AND rm.IsDelete = 1 THEN 1 ELSE 0 END AS SelectAll
                FROM sysmodulesrelationship mr
                LEFT OUTER JOIN sysmodules m ON m.Code = mr.Modules
                LEFT OUTER JOIN sysmodulesgroup mg ON mg.Code = mr.ModulesGroup
                LEFT OUTER JOIN sysmodulesparent mp ON mp.Code = m.ModulesParent
                LEFT OUTER JOIN rolemodules rm ON rm.Modules = mr.Modules AND rm.Role = '".$user->Role."'
                WHERE mg.Code IN (".$modules.") AND rm.Oid IS NOT NULL AND m.Code = '".$module."'
                GROUP BY mp.Name, m.Name, rm.Oid, rm.Role, rm.IsRead, rm.IsAdd, rm.IsEdit, rm.IsDelete";
        $data = DB::select($query);

        if ($data == null) {
            // $data = [];   
            // $tmp = new stdClass();       
            // $tmp->IsRead = 0;
            // $tmp->IsAdd = 0;
            // $tmp->IsDelete = 0;
            // $data[] = $tmp;
            $result = new stdClass();
            $result->IsRead = 0;
            $result->IsAdd = 0;
            $result->IsEdit = 0;
            $result->IsDelete = 0;
        } else {
            $result = $data[0];
        }
        return $result;
    }
    
    public function action($module)
    {
        $company = Auth::user()->CompanyObj;
        $user = Auth::user();
        $cancel = RoleModuleCustom::where('Modules',$module)->where('Role',$user->Role)->where('Action','Cancel')->first();
        $paid = RoleModuleCustom::where('Modules',$module)->where('Role',$user->Role)->where('Action','Paid')->first();
        $entry = RoleModuleCustom::where('Modules',$module)->where('Role',$user->Role)->where('Action','Entry')->first();
        $posted = RoleModuleCustom::where('Modules',$module)->where('Role',$user->Role)->where('Action','Posted')->first();
        $complete = RoleModuleCustom::where('Modules',$module)->where('Role',$user->Role)->where('Action','Complete')->first();
        $quoted = RoleModuleCustom::where('Modules',$module)->where('Role',$user->Role)->where('Action','Quoted')->first();
        $data = new stdClass();
        $data->Cancel = $cancel ? $cancel->IsEnable : 0;
        $data->Paid = $paid ? $paid->IsEnable : 0;
        $data->Entry = $entry ? $entry->IsEnable : 0;
        $data->Posted = $posted ? $posted->IsEnable : 0;
        $data->Complete = $complete ? $complete->IsEnable : 0;
        $data->Quoted = $quoted ? $quoted->IsEnable : 0;
        return $data;
    }

    public function isAllowPost($status, $role)
    {
        if (!$role) return 0;
        if ($status == null) return 0;
        if ($status->Code != 'entry') return 0;
        return 1;
    } 
    public function isAllowPaid($status, $role)
    {
        if (!$role) return 0;
        if ($status == null) return 0;
        if ($status->Code == 'paid') return 0;
        if ($status->Code == 'completed') return 0;
        if ($status->Code == 'cancel') return 0;
        if ($status->Code == 'expired') return 0;
        return 1;
    } 
    public function isAllowEntry($status, $role)
    {
        if (!$role) return 0;
        if ($status == null) return 0;
        if ($status->Code == 'entry') return 0;
        if ($status->Code == 'cancel') return 0;
        return 1;
    } 
    public function isAllowCancel($status, $role)
    {
        if (!$role) return 0;
        if ($status == null) return 0;
        if ($status->Code != 'entry') return 0;
        return 1;
    } 
    public function isAllowDelete($status, $role)
    {
        if (!$role) return 0;
        if ($status == null) return 0;
        if ($status->Code != 'entry') return 0;
        return 1;
    } 
    public function isAllowComplete($status, $role)
    {
        if (!$role) return 0;
        if ($status == null) return 0;
        if ($status->Code != 'posted' && $status->Code != 'paid') return 0;
        return 1;
    } 
    public function isPosted($status, $role)
    {
        if (!$role) return 0;
        if ($status == null) return 0;
        if ($status->Code != 'posted' && $status->Code != 'paid' && $status->Code != 'completed') return 0;
        return 1;
    } 
    
    public function isProductionAllowPost($status, $role)
    {
        if (!$role) return 0;
        if ($status == null) return 0;
        if ($status->Code != 'quoted') return 0;
        return 1;
    }  
    
    public function isProductionAllowQuoted($status, $role)
    {
        if (!$role) return 0;
        if ($status == null) return 0;
        if ($status->Code != 'posted' && $status->Code != 'entry') return 0;
        return 1;
    }  
    
    public function isProductionAllowEntry($status, $role)
    {
        if (!$role) return 0;
        if ($status == null) return 0;
        if ($status->Code != 'quoted' && $status->Code != 'posted') return 0;
        return 1;
    } 
    
    public function isProductionAllowCancel($status, $role)
    {
        if (!$role) return 0;
        if ($status == null) return 0;
        if ($status->Code != 'entry') return 0;
        return 1;
    } 

    public function isProductionPosted($status, $role)
    {
        if (!$role) return 0;
        if ($status == null) return 0;
        if ($status->Code != 'posted' && $status->Code != 'quoted') return 0;
        return 1;
    } 
}