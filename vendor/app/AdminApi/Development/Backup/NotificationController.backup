<?php

namespace App\AdminApi\Security\Controllers;

use App\Laravel\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Http\Response;
use App\Core\Base\Services\HttpService;
use App\Core\Security\Entities\Notification;
use Illuminate\Support\Facades\Auth;
use App\Core\Trading\Entities\PurchaseRequest;
use App\Core\Trading\Events\PurchaseRequestSubmit;

class NotificationController extends Controller
{
    public function list(Request $request)
    {
        try {
            $type = $request->input('type') ?: 'quick';
            $count = Notification::whereHas('Details', function ($query) use ($request) {    
                $user = Auth::user();
                $query->where('User', $user->Oid)->whereNull('DateRead');
            })->get();
            $data = Notification::whereHas('Details', function ($query) use ($request) {    
                $user = Auth::user();
                $type = $request->input('type') ?: 'quick';
                if ($type == 'quick') $query->where('User', $user->Oid)->whereNull('DateRead');
                else $query->where('User', $user->Oid);
            });;
            if ($type == 'quick') $data = $data->limit(10);
            $data = $data->orderBy('Date','desc')->get();
            return [
                'Count' => $count->count(),
                'List' => $data,
            ];

        } catch (\Exception $e) {
            return response()->json(
                errjson($e),
                Response::HTTP_NOT_FOUND
            );
        }
    }

    public function read(Request $request, $oid = null)
    {
        try {   
            $user = Auth::user();
            $data = Notification::where('User', $user->Oid)->whereNull('DateRead');
            if ($oid) $data->where('Oid', $oid);
            $data = $data->get();
            foreach($data as $row) {
                $row->DateRead = now()->addHours(company_timezone())->toDateTimeString();
                $row->save();                
            }
            return $data;

        } catch (\Exception $e) {
            return response()->json(
                errjson($e),
                Response::HTTP_NOT_FOUND
            );
        }
    }
    
    public function test(Request $request)
    {
        $login = Auth::user();
        $user = $request->has('user') ? $request->input('user') : $login->Oid;
        $company = $request->has('company') ? $request->input('company') : $login->Company;
        $param = [
            'User'=> $user,
            'Company' => $company,
            'Title' => $request->input('title') ? $request->input('title') : 'Title '.now()->format('mdHis').str_random(2),
            'Message' => $request->input('message') ? $request->input('message') : 'This is a Testing Message '.now()->format('mdHis').str_random(2),
        ];
        event(new PurchaseRequestSubmit($param));
    }
}
