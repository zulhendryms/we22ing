<?php

namespace App\AdminApi\ReportProduction\Controllers;

use Illuminate\Http\Request;
use Illuminate\Http\Response;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Storage;

use App\Laravel\Http\Controllers\Controller;
use App\Core\Accounting\Entities\Account;
use App\Core\Accounting\Entities\AccountGroup;
use App\Core\Master\Entities\BusinessPartner;
use App\AdminApi\ReportProduction\Services\ReportService;

use Barryvdh\DomPDF\Facade as PDF;
use Barryvdh\Snappy\Facades\SnappyPdf;
use Carbon\Carbon;

class ProsesProduksiPerMonthController extends Controller
{
    /** @var ReportService $reportService */
    protected $reportService;

    protected $reportName;

    /**
     * @param ReportService $reportService
     * @return void
     */
    public function __construct(ReportService $reportService)
    {
        $this->reportName = 'production';
        $this->reportService = $reportService;
    }

    public function view(Request $request, $reportName)
    {
        return response()
            ->file($this
                ->reportService
                ->setFileName($reportName)
                ->getFilePath())
            ->deleteFileAfterSend(true);
    }

    public function report(Request $request)
    {
      // dd('1');
      $reportname = $request->input('report');
      $user = Auth::user();

      $query = $this->query($reportname);
      $criteria1 = ""; $criteria2 = ""; $criteria3 = ""; $criteria4 = ""; 
      $filter="";
      
      $datefrom = Carbon::parse($request->input('datefrom'));
      $dateto = Carbon::parse($request->input('dateto'));
      $firstDayOfMonth =$datefrom->modify('first day of this month');

      $filter = $filter."Date From = '".strtoupper($datefrom->format('Y-m-d'))."'; "; 
      $filter = $filter."Date To = '".strtoupper($dateto->format('Y-m-d'))."'; "; 

      $criteria1 = $criteria1." AND j.Date >= '".$datefrom->format('Y-m-d')."'";
      $criteria1 = $criteria1." AND j.Date <= '".$dateto->format('Y-m-d')."'";

      $criteria3 = $criteria3." AND j.Date <= '".$datefrom->format('Y-m-d')."'";
      
      $criteria2 = $criteria2." AND j.Date >= '".$firstDayOfMonth->format('Y-m-d')."'";
      $criteria2 = $criteria2." AND j.Date < '".$datefrom->format('Y-m-d')."'";
  
      $criteria4 = $criteria4." AND cb.Date >= '".$datefrom->format('Y-m-d')."'";
      $criteria4 = $criteria4." AND cb.Date <= '".$dateto->format('Y-m-d')."'";

      if ($request->input('account')) {
          $val = Account::findOrFail($request->input('account'));
          $criteria1 = $criteria1." AND j.Account = '".$val->Oid."'";
          $criteria2 = $criteria2." AND j.Account = '".$val->Oid."'";
          $criteria3 = $criteria3." AND j.Account = '".$val->Oid."'";
          $criteria4 = $criteria4." AND j.Account = '".$val->Oid."'";
          $filter = $filter."Account = '".strtoupper($val->Name)."'; ";
      }
      if ($request->input('businesspartner')) {
          $val = BusinessPartner::findOrFail($request->input('businesspartner'));
          $criteria1 = $criteria1." AND j.BusinessPartner = '".$val->Oid."'";
          $criteria2 = $criteria2." AND j.BusinessPartner = '".$val->Oid."'";
          $criteria3 = $criteria3." AND j.BusinessPartner = '".$val->Oid."'";
          $criteria4 = $criteria4." AND j.BusinessPartner = '".$val->Oid."'";
          $filter = $filter."B.Partner = '".strtoupper($val->Name)."'; ";
      }
      if ($request->input('accountgroup')) {
        $val = AccountGroup::findOrFail($request->input('accountgroup'));
        $criteria1 = $criteria1." AND a.AccountGroup = '".$val->Oid."'";
        $criteria2 = $criteria2." AND a.AccountGroup = '".$val->Oid."'";
        $criteria3 = $criteria3." AND a.AccountGroup = '".$val->Oid."'";
        $criteria4 = $criteria4." AND a.AccountGroup = '".$val->Oid."'";
        $filter = $filter."A. Group= '".strtoupper($val->Name)."'; ";
      }

      if ($filter) $filter = substr($filter,0);
      if ($criteria1) $query = str_replace(" AND 1=1",$criteria1,$query);
      if ($criteria2) $query = str_replace(" AND 2=2",$criteria2,$query);
      if ($criteria3) $query = str_replace(" AND 3=3",$criteria3,$query);
      if ($criteria4) $query = str_replace(" AND 4=4",$criteria4,$query);
      // dd('1');
      logger($query);
      $data = DB::select($query);

      switch ($reportname) {
        case 'production1':
            $reporttitle = "Report Production";
            $pdf = SnappyPdf::loadView('AdminApi\ReportProduction::pdf.'.$reportname, compact('data', 'user', 'reportname','filter', 'reporttitle'));
        break;
      }
  
      $headerHtml = view('AdminApi\ReportProduction::pdf.header', compact('user', 'reportname', 'filter', 'reporttitle'))
        ->render();
      $footerHtml = view('AdminApi\ReportProduction::pdf.footer', compact('user'))
        ->render();

      $pdf
        ->setOption('header-html', $headerHtml)
        ->setOption('footer-html', $footerHtml)
        ->setOption('footer-right', "Page [page] of [toPage]")
        ->setOption('footer-font-size', 5)
        ->setOption('footer-line', true)
        ->setOption('margin-right', 15)
        ->setOption('margin-bottom', 10);

      $reportFile = $this->reportService->create($this->reportName, $pdf);
      $reportPath = $reportFile->getFileName();
      if ($request->input('action')=='download') return response()->download($reportFile->getFilePath())->deleteFileAfterSend(true);

      return response()
          ->json(
              route('AdminApi\ReportProduction::view',
              ['reportName' => $reportPath]), Response::HTTP_OK
          );
    }

    private function query($reportname) {
      switch ($reportname) {
          default:
            return "SELECT 
            result.Date,
            result.ProcessName,
            SUM(QuantityProduction),
            SUM(result.QuantityReject)
            FROM
            (SELECT 
            prd.Oid, 
            DATE_FORMAT(prd.Date,'%Y-%m-01') AS Date, 
            pro.Oid AS ProductionProcess, 
            CONCAT(pro.Name,' - ',pro.Code) ProcessName, 
            IFNULL(prd.QuantityProduction,0) AS QuantityProduction , 
            IFNULL(prd.QuantityReject,0) AS QuantityReject
            FROM prdproduction prd
            LEFT OUTER JOIN prdorderitemdetail poid ON poid.Oid = prd.Oid
            LEFT OUTER JOIN prdprocess pro ON pro.Oid = prd.ProductionProcess
            WHERE IFNULL(prd.QuantityProduction,0) + IFNULL(prd.QuantityReject,0) != 0 AND 1=1
            GROUP BY DATE_FORMAT(prd.Date,'%Y-%m-01'), prd.Oid, pro.Oid,pro.Name,pro.Code) AS result  
            GROUP BY 
            result.Date,
            result.ProcessName";
        }
      return "";
  }


}